//KC03H0AA JOB ,'MEYER',MSGCLASS=H
//JSTEP01  EXEC PGM=ASMA90,PARM=ASA,COND=(0,LT)
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//SYSIN    DD *
         PRINT  NOGEN                MACRO CALL SUPPRESSION
**********************************************************************
*                                                                    *
* PROGRAM:    ASSIGN6                                                *
* AUTHOR:     JOE MEYER                                              *
* DATE:       04/08/2019                                             *
*                                                                    *
* FUNCTION:  THIS PROGRAM READS INPUT DATA RECORDS AND THEN WRITES   *
*            THEM TO STANDARD OUTPUT.                                *
*                                                                    *
* INPUT:     INPUT - THE INPUT DATA RECORDS READ IN.                 *
*                                                                    *
* OUTPUT:    OUTPUT - THE INPUT DATA RECORDS WRITTEN OUT.            *
*                                                                    *
**********************************************************************
ASSIGN6     CSECT                    BEGIN ASSIGN6
*
         STM   14,12,12(13)          SAVE CALLER'S REGS
         LR    12,15                 SET R12 TO R15
         USING ASSIGN6,12            ESTABLISH R12 AS 1ST BASE REG
         LA    14,REGS               R14 -> CURRENT SAVE AREA
         ST    13,4(,14)             SAVE CALLER'S SAVE AREA ADDR
         ST    14,8(,14)             SAVE CURRENT SAVE AREA ADDR
         LR    13,14                 R13 -> CURRENT SAVE AREA
*
         LR    11,12
         LA    11,4095(,11)
         LA    11,1(,11)
         USING ASSIGN6+4096,11
*
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY
*
         OPEN  (INDCB,(INPUT))       OPEN INPUT FILE
         LTR   15,15                 CHECK FOR SUCCESSFUL OPEN
         BZ    OPENOK1               BRANCH IF SUCCESSFUL TO OPENOK1
         ABEND 333,DUMP              ABEND IF OPEN FAILS & DISPLAY 333
*
OPENOK1  OPEN  (OUTDCB,(OUTPUT))     OPEN OUTPUT FILE
         LTR   15,15                 CHECK FOR SUCCESSFUL OPEN
         BZ    OPENOK2               BRANCH IF SUCCESSFUL TO OPENOK2
         ABEND 444,DUMP              ABEND IF OPEN FAILS & DISPLAY 444
*
OPENOK2  OPEN  (TMPDCB,(OUTPUT))        READ THE FIRST RECORD
         LTR   15,15                 CHECK FOR SUCCESSFUL OPEN
         BZ    OPENOK3               BRANCH IF SUCCESSFUL TO OPENOK2
         ABEND 444,DUMP              ABEND IF OPEN FAILS & DISPLAY 444
*
OPENOK3  GET   INDCB,IFUNDREC
*
         XR    3,3
         LA    3,15(3)
*
         MVC   OFNDNME(25),IFUNDNME
         PACK  PCCT1(4),ICOMM1(6)
         PACK  PCCT2(4),ICOMM2(6)
         PACK  PCCT3(4),ICOMM3(6)
         PACK  PSHRPRC(3),ISHRPRC(5)
         LA    1,OSHRPRC+3
         EDMK  OSHRPRC(7),PSHRPRC
         BCTR  1,0
         MVI   0(1),C'$'
*
         ED    ODATE(10),DATETIME+8
         ED    OTIME(6),DATETIME
*
         GET   INDCB,ISALEREC
*
LOOP1    CLI   EOFFLAG,C'Y'          CHECK FOR END OF INPUT DATA
         BE    ENDLOOP1              BRANCH TO ENDLOOP1 IF EOF
         LA    3,1(3)
         AP    PRECORD(3),=P'1'
         AP    PAGECTR(2),=P'1'
         MVC   OPGENUM(4),=X'202120'
         ED    OPGENUM(4),PAGECTR
*
         MVC   OBRNME(25),IBRNME
         MVC   OBRKNME(25),IBRKNME
*
         PACK  PDEPAMT(6),IDEPAMT(10)
         ZAP   PDEPAMT2(10),PDEPAMT(6)
         SRP   PDEPAMT2(10),3,5
         ZAP   PCOMMS(10),PDEPAMT(6)
         MVC   ODEPAMT(15),DEPM
         LA    1,ODEPAMT+11
         EDMK  ODEPAMT(15),PDEPAMT
         BCTR  1,0
         MVI   0(1),C'$'
*
         DP    PDEPAMT2(10),PSHRPRC(3)
         MVC   OSHRSLD(18),SHRM
         ED    OSHRSLD(18),PDEPAMT2
*
         CLI   ICOMMFLG,X'F1'
         BNE   IF1
         MP    PCOMMS(10),PCCT1(4)
         SRP   PCOMMS(10),64-4,9
         LA    1,OCOMMTOT+10
         MVC   OCOMMTOT(14),COMM
         EDMK  OCOMMTOT(14),PCOMMS+4
         BCTR  1,0
         MVI   0(1),C'$'
         B     IF3
*
IF1      CLI   ICOMMFLG,X'F2'
         BNE   IF2
         MP    PCOMMS(10),PCCT2(4)
         SRP   PCOMMS(10),64-4,9
         LA    1,OCOMMTOT+10
         MVC   OCOMMTOT(14),COMM
         EDMK  OCOMMTOT(14),PCOMMS+4
         BCTR  1,0
         MVI   0(1),C'$'
         B     IF3
*
IF2      CLI   ICOMMFLG,X'F3'
         BNE   IF1
         MP    PCOMMS(10),PCCT3(4)
         SRP   PCOMMS(10),64-4,9
         LA    1,OCOMMTOT+10
         MVC   OCOMMTOT(14),COMM
         EDMK  OCOMMTOT(14),PCOMMS+4
         BCTR  1,0
         MVI   0(1),C'$'
*
IF3      C     3,=F'16'
         BNE   HEAD
         ED    OPGENUM(4),PAGECTR
         PUT   OUTDCB,PRINTH1
         PUT   OUTDCB,PRINTH2
         PUT   OUTDCB,PRINTH3
         PUT   OUTDCB,PRINTH4
         PUT   OUTDCB,PRINTH5
         AP    PAGECTR(2),=P'1'
         XR    3,3
*
HEAD     PUT   OUTDCB,PRINTLNE
         LA    8,1(,8)
         AP    PCOMTOT(7),PCOMMS+4(6)
         AP    PTOTDPMT(7),PDEPAMT(6)
         AP    PSHRTOT(8),PDEPAMT2(7)
*
         CP    PDEPAMT2(7),=P'1000000'
         BL    HI
         ZAP   IHISHR(7),PDEPAMT2(7)
         MVC   IHINME(25),IBRKNME
         PUT   TMPDCB,HIGHSL
HI       GET   INDCB,ISALEREC
         B     LOOP1                 BRANCH TO TOP OF LOOP1
*
ENDLOOP1 SRP   PTOTDPMT(7),1,5
         MVC   OTOTDEP(17),DEPM2
         EDMK  OTOTDEP(17),PTOTDPMT
         BCTR  1,0
         MVI   0(1),C'$'
*
         AP    PAGECTR(2),=P'1'
         MVC   OPGENUM(4),=X'202120'
         ED    OPGENUM(4),PAGECTR
         MVC   ONUMSLS(6),=X'402020202120'
         ED    ONUMSLS(6),PRECORD
*
         MVC   OTOTSHR(20),SHRM2
         ED    OTOTSHR(20),PSHRTOT
*
         LA    1,OTOTCOMM+14
         MVC   OTOTCOMM(17),COMM2
         EDMK  OTOTCOMM(17),PCOMTOT
         BCTR  1,0
         MVI   0(1),C'$'
         PUT   OUTDCB,PRINTH1
         PUT   OUTDCB,PRINTH2
         PUT   OUTDCB,PRINTH3
         PUT   OUTDCB,TFORDAY
         PUT   OUTDCB,TFORDAY1
         PUT   OUTDCB,TFORDAY2
*
         CLOSE (INDCB)       CLOSE THE TWO DCBs
*
         MVI   EOFFLAG,C'N'
         CLOSE (TMPDCB)
*
         OPEN  (TMPDCB,(INPUT))
         LTR   15,15                 CHECK FOR SUCCESSFUL OPEN
         BZ    OPENOK4               BRANCH IF SUCCESSFUL TO OPENOK2
         ABEND 777,DUMP
OPENOK4  GET   TMPDCB,HIGHSL
         LA    2,0(1)
*
         ZAP   PAGECTR(2),=P'1'
         MVC   OPGENUM(3),=X'402120'
         ED    OPGENUM(3),PAGECTR
         PUT   OUTDCB,PRINTH1
         PUT   OUTDCB,PRINTH2
         PUT   OUTDCB,PHGHSAL
         PUT   OUTDCB,PHGHSAL1
*
         GET   TMPDCB,HIGHSL
         LA    2,0(1)
*
LOOP2    CLI   EOFFLAG,C'Y'
         BE    ENDLOOP2
         MVC   OHGHBRKR(25),0(2)
         MVC   OHGHSHRS(18),SHRM
         ED    OHGHSHRS(18),25(2)
         AP    BRKCTR,=P'1'
         AP    PHITOT(7),25(7,2)
         PUT   OUTDCB,PHGHSAL2
         GET   TMPDCB,HIGHSL
         LA    2,0(1)
         B     LOOP2
*
ENDLOOP2 ED    ONUM(5),BRKCTR
         MVC   OSHARES(17),COMM2
         ED    OSHARES(17),PHITOT
         PUT   OUTDCB,PRINTH1
         PUT   OUTDCB,PRINTH2
         PUT   OUTDCB,PRINTH3
         PUT   OUTDCB,TOTAL1
         PUT   OUTDCB,TOTAL2
         PUT   OUTDCB,TOTAL3
*
         L     13,4(,13)             R13 -> CALLER'S SAVE AREA
         L     14,12(,13)            RESTORE R14
         LM    0,12,20(13)           RESTORE R0 THROUGH R12
*
         BR    14                    RETURN TO CALLER
*
         LTORG                       LTORG TO ORGANIZE LITERALS
*
         ORG   ASSIGN6+((*-ASSIGN6+31)/32)*32
         DC    C'HERE IS THE STORAGE FOR: ASSIGN6'
*
*
**********RECORDS****************
*
*
REGS     DC    18F'0'                MAINREGS FOR STANDARD LINKAGE
INRECORD DC    80C'@'                INPUT BUFFER FILL WITH '@'
FUNRECRD DC    80C'@'                FUND RECORD
PRINTLN  DC    CL1' '                PRINTLN CARRIAGE CONTROL
*
*
***********VARABLES**************
*
*
ISALEREC DS    0H
IBRNME   DS    CL25
IBRKNME  DS    CL25
IDEPAMT  DS    ZL10
         DS    CL4
ICOMMFLG DS    ZL1
         DS    CL15
*********************************
IFUNDREC DS    0H
ISHRPRC  DS    ZL5
IFUNDNME DS    CL25
ICOMM1   DS    ZL6
ICOMM2   DS    ZL6
ICOMM3   DS    ZL6
         DS    CL32
*********************************
HIGHSL   DS    0H
IHINME   DS    CL25
IHISHR   DS    PL7
*********************************
PAGECTR  DC    PL2'0'
BRKCTR   DC    PL2'0'
CNTLNE   DC    PL2'0'
*********************************
PDEPAMT  DC    PL6'0'
PDEPAMT2 DC    PL10'0'
PCALCSHR DC    PL11'0'
PSHRPRC  DC    PL3'0'
PTOTSHR  DC    PL8'0'
PRECORD  DC    PL3'0'
PTOTDPMT DC    PL7'0'
PCCT1    DC    PL4'0'
PCCT2    DC    PL4'0'
PCCT3    DC    PL4'0'
PCOMMS   DC    PL10'0'
PCOMTOT  DC    PL7'0'
PHITOT   DC    PL7'0'
PSHRTOT  DC    PL8'0'
*********************************
EOFFLAG  DC    C'N'                  EOFFLAG FOR INPUT FILE
*
DATETIME DS    4F                STORAGE FOR TIME MACRO
*
*
************OUTPUT***************
*
*
SHRM DC    X'40206B2020206B2020206B2021204B202020'
DEPM DC    X'402020206B2020206B2021204B2020'
COMM DC    X'4020206B2020206B2021204B2020'
SHRM2 DC    X'402020206B2020206B2020206B2021204B202020'
DEPM2 DC    X'40206B2020206B2020206B2021204B2020'
COMM2 DC    X'40206B2020206B2020206B2021204B2020'
*
PRINTLNE DS    C'0'
OBRNME   DS    CL25
         DC    9C' '
OBRKNME  DS    CL25
         DC    8C' '
ODEPAMT  DS    CL14
         DC    10C' '
OSHRSLD  DS    CL18
         DC    9C' '
OCOMMTOT DS    CL14
*
PRINTH1  DS    C'0'
ODATE    DC    X'20206120206120202020'
         DC    42C' '
OFNDNME  DS    25C
         DC    47C' '
         DC    C'PAGE: '
OPGENUM  DS    CL3' '
*
PRINTH2  DS    C'0'
OTIME    DC    X'4020207A2020'
         DC    39C' '
         DC    C'BROKER DEPOSITS AND COMMISSIONS REPORT'
         DC    47C' '
*
PRINTH3  DS    C' '
         DC    52C' '
         DC    C'DAY''S SHARE PRICE:'
OSHRPRC  DC    XL7'402020214B2020'
         DC    55C' '
*
PRINTH4  DS    C' '
         DC    C'BRANCH NAME'
         DC    23C' '
         DC    C'BROKER''S NAME'
         DC    21C' '
         DC    C'DEPOSIT AMOUNT'
         DC    16C' '
         DC    C'SHARES SOLD'
         DC    13C' '
         DC    C'COMMISSION'
*
PRINTH5  DS    C' '
         DC    25C'-'
         DC    9C' '
         DC    25C'-'
         DC    9C' '
         DC    14C'-'
         DC    9C' '
         DC    18C'-'
         DC    9C' '
         DC    14C'-'
*
TFORDAY  DS    C' '
         DC    39C' '
         DC    C'NUMBER OF SALES'
         DC    8C' '
         DC    C'TOTAL DEPOSIT AMOUNT'
         DC    10C' '
         DC    C'TOTAL SHARES SOLD'
         DC    7C' '
         DC    C'TOTAL COMMISSION'
*
TFORDAY1 DS    C' '
         DC    39C' '
         DC    15C'-'
         DC    8C' '
         DC    20C'-'
         DC    7C' '
         DC    20C'-'
         DC    6C' '
         DC    18C'-'
*
TFORDAY2 DS    C' '
         DC    48C' '
ONUMSLS  DS    CL6
         DC    11C' '
OTOTDEP  DS    CL14
         DC    10C' '
OTOTSHR  DS    CL11
         DC    15C' '
OTOTCOMM DS    CL17
*
PHGHSAL  DC    C' '
         DC    37C' '
         DC    C'HIGH SALES BROKER NAME'
         DC    14C' '
         DC    C'HIGH SALES SHARES SOLD'
         DC    37C' '
*
PHGHSAL1 DC    C' '
         DC    37C' '
         DC    25C'-'
         DC    10C' '
         DC    23C'-'
         DC    37C' '
*
PHGHSAL2 DC    C' '
         DC    37C' '
OHGHBRKR DS    CL25
         DC    15C' '
OHGHSHRS DS    CL18
         DC    39C' '
*
TOTAL1   DC    C' '
         DC    31C' '
         DC    C'NUMBER OF HIGH SALES BROKERS'
         DC    8C' '
         DC    C'TOTAL HIGH SALES SHARES SOLD'
         DC    37C' '
*
TOTAL2   DC    C' '
         DC    31C' '
         DC    28C'-'
         DC    7C' '
         DC    29C'-'
         DC    37C' '
*
TOTAL3   DC    C' '
         DC    55C' '
ONUM     DC    X'4020202120'
         DC    18C' '
OSHARES  DS    CL11
         DC    44C' '
*
*  INPUT DCB
*
INDCB    DCB   DDNAME=ASMIN,                                           X
               DEVD=DA,                                                X
               DSORG=PS,                                               X
               MACRF=GM,                                               X
               RECFM=FB,                                               X
               LRECL=80,                                               X
               EODAD=EOFRTN
*
*  TMP DCB
*
TMPDCB   DCB   DDNAME=TEMP,                                            X
               DEVD=DA,                                                X
               DSORG=PS,                                               X
               MACRF=(GM,PM),                                          X
               RECFM=FB,                                               X
               LRECL=32,                                               X
               EODAD=EOFRTN
*
*  INPUT DCB'S EOF FLAG AND EOF ROUTINE
*
*
EOFRTN   MVI   EOFFLAG,C'Y'          SET EOF FLAG TO Y
         BR    14                    BRANCH TO STMT FOLLOWING GET
*
*  OUTPUT DCB
*
OUTDCB   DCB   DDNAME=ASMOUT,                                          X
               DEVD=DA,                                                X
               DSORG=PS,                                               X
               MACRF=PM,                                               X
               RECFM=FBA,                                              X
               LRECL=133,                                              X
               BLKSIZE=133
*
         END   ASSIGN6
/*
//SYSMDECK DD SPACE=(CYL,(1,1))
//SYSUT1   DD SPACE=(CYL,(1,1))
//SYSUT2   DD SPACE=(CYL,(1,1))
//SYSUT3   DD SPACE=(CYL,(1,1))
//SYSUT4   DD SPACE=(CYL,(1,1))
//SYSUT5   DD SPACE=(CYL,(1,1))
//SYSUT6   DD SPACE=(CYL,(1,1))
//SYSUT7   DD SPACE=(CYL,(1,1))
//SYSUT8   DD SPACE=(CYL,(1,1))
//SYSUT9   DD SPACE=(CYL,(1,1))
//SYSUT10  DD SPACE=(CYL,(1,1))
//SYSUT11  DD SPACE=(CYL,(1,1))
//SYSUT12  DD SPACE=(CYL,(1,1))
//SYSUT13  DD SPACE=(CYL,(1,1))
//SYSUT14  DD SPACE=(CYL,(1,1))
//SYSUT15  DD SPACE=(CYL,(1,1))
//*
//SYSLIN   DD DSN=&&OBJMOD,SPACE=(CYL,(1,1)),DISP=(MOD,PASS)
//SYSPRINT DD SYSOUT=*
//*
//JSTEP02  EXEC PGM=HEWL,COND=(0,LT)
//SYSLIB   DD DSN=CEE.SCEELKED,DISP=SHR
//*
//SYSLIN   DD DSN=&&OBJMOD,DISP=(MOD,DELETE,DELETE)
//SYSLMOD  DD DSN=KC03H0A.CSCI465.LOADLIB(ASSIGN6),
//            SPACE=(1024,(50,20,1)),DSNTYPE=LIBRARY,
//            DISP=(MOD,KEEP,KEEP)
//*
//SYSPRINT DD SYSOUT=*
//*
//JSTEP03  EXEC PGM=ASSIGN6,COND=(0,LT)
//*
//STEPLIB   DD DSN=KC03H0A.CSCI465.LOADLIB,DISP=SHR
//*
//ASMIN     DD DSN=KC02322.CSCI465.DATASP19(DATA5),DISP=SHR
//*
//TEMP      DD SPACE=(TRK,(1,1))
//*
//ASMOUT    DD SYSOUT=*
//*
//SYSUDUMP  DD SYSOUT=*
//
