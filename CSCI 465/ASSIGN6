//KC03H0AA JOB ,'MEYER',MSGCLASS=H
//JSTEP01 EXEC PGM=ASMA90,PARM=ASA
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//SYSIN    DD *
         PRINT  NOGEN                MACRO CALL SUPPRESSION
**********************************************************************
*                                                                    *
* PROGRAM:    ASSIGN6                                                *
* AUTHOR:     JOE MEYER                                              *
* DATE:       04/08/2019                                             *
*                                                                    *
* FUNCTION:  THIS PROGRAM READS INPUT DATA RECORDS AND THEN WRITES   *
*            THEM TO STANDARD OUTPUT.                                *
*                                                                    *
* INPUT:     INPUT - THE INPUT DATA RECORDS READ IN.                 *
*                                                                    *
* OUTPUT:    OUTPUT - THE INPUT DATA RECORDS WRITTEN OUT.            *
*                                                                    *
**********************************************************************
ASSIGN6     CSECT                    BEGIN ASSIGN6
*
         STM   14,12,12(13)          SAVE CALLER'S REGS
         LR    12,15                 SET R12 TO R15
         USING ASSIGN6,12            ESTABLISH R12 AS 1ST BASE REG
         LA    14,REGS               R14 -> CURRENT SAVE AREA
         ST    13,4(,14)             SAVE CALLER'S SAVE AREA ADDR
         ST    14,8(,14)             SAVE CURRENT SAVE AREA ADDR
         LR    13,14                 R13 -> CURRENT SAVE AREA
*
         LR    11,12
         LA    11,4095(,11)
         LA    11,1(,11)
         USING ASSIGN6+4096,11
*
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY
         ED    ODATE(10),DATETIME+8
         ED    OTIME(6),DATETIME
*
         OPEN  (INDCB,(INPUT))       OPEN INPUT FILE
         LTR   15,15                 CHECK FOR SUCCESSFUL OPEN
         BZ    OPENOK1               BRANCH IF SUCCESSFUL TO OPENOK1
         ABEND 333,DUMP              ABEND IF OPEN FAILS & DISPLAY 333
*
OPENOK1  OPEN  (OUTDCB,(OUTPUT))     OPEN OUTPUT FILE
         LTR   15,15                 CHECK FOR SUCCESSFUL OPEN
         BZ    OPENOK2               BRANCH IF SUCCESSFUL TO OPENOK2
         ABEND 444,DUMP              ABEND IF OPEN FAILS & DISPLAY 444
*
OPENOK2  OPEN  (TMPDCB,(OUTPUT))        READ THE FIRST RECORD
         LTR   15,15                 CHECK FOR SUCCESSFUL OPEN
         BZ    OPENOK3               BRANCH IF SUCCESSFUL TO OPENOK2
         ABEND 444,DUMP              ABEND IF OPEN FAILS & DISPLAY 444
*
OPENOK3  GET   INDCB,IFUNDREC
*
         XR    3,3
         LA    3,15(3)
*
         MVC   OFUNDNME(25),IFUNDNME
         PACK  PCOMPCT1(4),ICOMPCT1(6)
         PACK  PCOMPCT2(4),ICOMPCT2(6)
         PACK  PCOMPCT3(4),ICOMPCT3(6)
         PACK


LOOP1    CLI   EOFFLAG,C'Y'          CHECK FOR END OF INPUT DATA
         BE    ENDLOOP1              BRANCH TO ENDLOOP1 IF EOF
*
         MVC   OBRNME(25),IBRNME
         MVC   OBRKNME(25),IBRKNME
*
         PACK  PDEPAMT(6),IDEPAMT(10)
         ZAP   PCALCSHR(11),PDEPAMT(6)
         SRP   PCALCSHR(11),4,0
         DP    PCALCSHR(11),PSHRPRC(3)
         SRP   PCALCSHR(8),64-1,5
         SRP   PCALCSHR(8),1,0
*
         GET   INDCB,INRECORD        GET THE NEXT RECORD
         B     LOOP1                 BRANCH TO TOP OF LOOP1
*
ENDLOOP1 CLOSE (INDCB,,OUTDCB)       CLOSE THE TWO DCBs
*
         CLI   EOFFLAG,C'N'
*
LOOP2    CLI   EOFFLAG,C'Y'
         BE    ENDLOOP2
         AP    PAGECTR(2),=PL1'1'
         AP    BRKCTR(2),=PL1'1'
*
         AP    PTOTSHR(10),PTOTDPMT(8)
         MVC   OHGHBRKR(25),IBRKNME
         MVC   OTOTSHR(11),=X'4020206B2020206B2020206B2021204B202020'
         EDMK  OTOTSHR(11),TOTLAMT
         PUT   INDCB,INRECORD
         GET   TMPDCB,INRECORD
         B     LOOP2
*
ENDLOOP2 CLOSE (INDCB,,OUTDCB)
         CLOSE (TMPDCB)
         L     13,4(,13)             R13 -> CALLER'S SAVE AREA
         L     14,12(,13)            RESTORE R14
         LM    0,12,20(13)           RESTORE R0 THROUGH R12
*
         BR    14                    RETURN TO CALLER
*
         LTORG                       LTORG TO ORGANIZE LITERALS
*
         ORG   ASSIGN6+((*-ASSIGN6+31)/32)*32
         DC    C'HERE IS THE STORAGE FOR: ASSIGN6'
*
*
**********RECORDS****************
*
*
REGS     DC    18F'0'                MAINREGS FOR STANDARD LINKAGE
INRECORD DC    80C'@'                INPUT BUFFER FILL WITH '@'
FUNRECRD DC    80C'@'                FUND RECORD
PRINTLN  DC    CL1' '                PRINTLN CARRIAGE CONTROL
*
*
***********VARABLES**************
*
*
ISALEREC DS    0H
IBRNME   DS    CL25
IBRKNME  DS    CL25
IDEPAMT  DS    ZL10
         DS    CL4
ICOMMFLG DS    ZL1
         DS    CL15
*********************************
IFUNDREC DS    0H
ISHRPRC  DS    ZL5
IFUNDNME DS    CL25
ICOMM1   DS    ZL6
ICOMM2   DS    ZL6
ICOMM3   DS    ZL6
         DS    CL32
*********************************
PAGECTR  DC    PL2'0'
BRKCTR   DC    PL2'0'
CNTLNE   DC    PL2'0'
*********************************
PDEPAMT  DC    PL6'0'
PCALCSHR DC    PL11'0'
PSHRPRC  DC    PL5'0'
PTOTSHR  DC    PL8'0'
TOTCOMM  DC    PL10'0'
TOTSALS  DC    PL10'0'
PTOTDPMT DC    PL8'0'
TOTLNUM  DC    PL3'0'
TOTLAMT  DC    PL11'0'
BRKRCOMM DC    PL9'0'
NHGHBRKR DC    PL3'0'
HGHSLET  DC    PL9'0'
SHARESLD DC    PL10'0'
*********************************
EOFFLAG  DC    C'N'                  EOFFLAG FOR INPUT FILE
*
DATETIME DS    4F                STORAGE FOR TIME MACRO
*
*
************OUTPUT***************
*
*
PRINTLNE DS    C'0'
OBRNME   DS    CL25
         DC    9C' '
OBRKNME  DS    CL25
         DC    9C' '
ODEPAMT  DS    CL14
         DC    6C' '
OSHRSLD  DS    CL18
         DC    10C' '
OCOMMTOT DS    CL14
*
PRINTH1  DS    C' '
ODATE    DS    X'20206120206120202020'
         DC    44C' '
OFNDNME  DS    25C
         DC    46C' '
         DC    6C'PAGE: '
OPGENUM  DS    ZL3
*
PRINTH2  DS    C' '
OTIME    DS    X'4020207A2020'
         DC    39C' '
         DC    38C'BROKER DEPOSITS AND COMMISSIONS REPORT'
         DC    47C' '
*
PRINTH3  DS    C' '
         DC    52C' '
         DC    20C'DAY''S SHARE PRICE: '
OSHRPRC  DS    CL7
         DC    53C' '

*
PRINTH4  DS    C' '
         DC    11C'BRANCH NAME'
         DC    23C' '
         DC    13C'BROKER''S NAME'
         DC    21C' '
         DC    14C'DEPOSIT AMOUNT'
         DC    16C' '
         DC    11C'SHARES SOLD'
         DC    13C' '
         DC    10C'COMMISSION'
*
PRINTH5  DS    C' '
         DC    25C'-'
         DC    9C' '
         DC    25C'-'
         DC    9C' '
         DC    14C'-'
         DC    9C' '
         DC    18C'-'
         DC    9C' '
         DC    14C'-'

*
TFORDAY  DS    C' '
         DC    39C' '
         DC    15C'NUMBER OF SALES'
         DC    8C' '
         DC    20C'TOTAL DEPOSIT AMOUNT'
         DC    10C' '
         DC    17C'TOTAL SHARES SOLD'
         DC    7C' '
         DC    16C'TOTAL COMMISSION'
*
TFORDAY1 DS    C' '
         DC    39C' '
         DC    15C'-'
         DC    8C' '
         DC    20C'-'
         DC    7C' '
         DC    20C'-'
         DC    6C' '
         DC    18C'-'

*
TFORDAY2 DS    C' '
         DC    51C' '
ONUMSLS  DS    CL4
         DC    15C' '
OTOTDEP  DS    CL14
         DC    16C' '
OTOTSHR  DS    CL11
         DC    12C' '
OTOTCOMM DS    CL9
*
PHGHSAL  DC    C' '
         DC    37C' '
         DC    22C'HIGH SALES BROKER NAME'
         DC    14C' '
         DC    22C'HIGH SALES SHARES SOLD'
         DC    37C' '
*
PHGHSAL1 DC    C' '
         DC    37C' '
         DC    25C'-'
         DC    10C' '
         DC    23C'-'
         DC    37C' '
*
PHGHSAL2 DC    C' '
         DC    37C' '
OHGHBRKR DS    CL25
         DC    22C' '
OHGHSHRS DS    CL11
         DC    39C' '
*
TOTAL1   DC    C' '
         DC    31C' '
         DC    28C'NUMBER OF HIGH SALES BROKERS'
         DC    8C' '
         DC    28C'TOTAL HIGH SALES SHARES SOLD'
         DC    37C' '
*
TOTAL2   DC    C' '
         DC    31C' '
         DC    28C'-'
         DC    7C' '
         DC    29C'-'
         DC    37C' '
*
TOTAL3   DC    C' '
         DC    55C' '
ONUM     DS    CL4
         DC    25C' '
OSHARES  DS    CL11
         DC    37C' '
*
*  INPUT DCB
*
INDCB    DCB   DDNAME=ASMIN,                                           X
               DEVD=DA,                                                X
               DSORG=PS,                                               X
               MACRF=GM,                                               X
               RECFM=FB,                                               X
               LRECL=80,                                               X
               EODAD=EOFRTN
*
*  TMP DCB
*
TMPDCB   DCB   DDNAME=ASMIN,                                           X
               DEVD=DA,                                                X
               DSORG=PS,                                               X
               MACRF=(GM,PM),                                          X
               RECFM=FB,                                               X
               LRECL=32,                                               X
               EODAD=EOFRTN
*
*  INPUT DCB'S EOF FLAG AND EOF ROUTINE
*
*
EOFRTN   MVI   EOFFLAG,C'Y'          SET EOF FLAG TO Y
         BR    14                    BRANCH TO STMT FOLLOWING GET
*
*  OUTPUT DCB
*
OUTDCB   DCB   DDNAME=ASMOUT,                                          X
               DEVD=DA,                                                X
               DSORG=PS,                                               X
               MACRF=PM,                                               X
               RECFM=FBA,                                              X
               LRECL=133,                                              X
               BLKSIZE=133
*
         END   ASSIGN6
/*
//SYSMDECK DD SPACE=(CYL,(1,1))
//SYSUT1   DD SPACE=(CYL,(1,1))
//SYSUT2   DD SPACE=(CYL,(1,1))
//SYSUT3   DD SPACE=(CYL,(1,1))
//SYSUT4   DD SPACE=(CYL,(1,1))
//SYSUT5   DD SPACE=(CYL,(1,1))
//SYSUT6   DD SPACE=(CYL,(1,1))
//SYSUT7   DD SPACE=(CYL,(1,1))
//SYSUT8   DD SPACE=(CYL,(1,1))
//SYSUT9   DD SPACE=(CYL,(1,1))
//SYSUT10  DD SPACE=(CYL,(1,1))
//SYSUT11  DD SPACE=(CYL,(1,1))
//SYSUT12  DD SPACE=(CYL,(1,1))
//SYSUT13  DD SPACE=(CYL,(1,1))
//SYSUT14  DD SPACE=(CYL,(1,1))
//SYSUT15  DD SPACE=(CYL,(1,1))
//*
//SYSLIN   DD DSN=&&OBJMOD,SPACE=(CYL,(1,1)),DISP=(MOD,PASS)
//SYSPRINT DD SYSOUT=*
//*
//JSTEP02  EXEC PGM=HEWL,COND=(0,LT)
//SYSLIB   DD DSN=CEE.SCEELKED,DISP=SHR
//*
//SYSLIN   DD DSN=&&OBJMOD,DISP=(MOD,DELETE,DELETE)
//SYSLMOD  DD DSN=KC03H0A.CSCI465.LOADLIB(ASSIGN6),
//            SPACE=(1024,(50,20,1)),DSNTYPE=LIBRARY,
//            DISP=(MOD,KEEP,KEEP)
//*
//SYSPRINT DD SYSOUT=*
//*
//JSTEP03  EXEC PGM=ASSIGN6,COND=(0,LT)
//*
//STEPLIB   DD DSN=KC03H0A.CSCI465.LOADLIB,DISP=SHR
//*
//ASMIN     DD DSN=KC02322.CSCI465.DATASP19(DATA6),DISP=SHR
//*
//ASMOUT    DD SYSOUT=*
//*
//SYSUDUMP  DD SYSOUT=*
